{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Peak Climbing Club Administration","text":"<p>This site documents how to undertake various administrative tasks for the Peak Climbing Club. It is not meant as a replacement for the clubs site.</p> <p>The site is written in Markdown and rendered using mkdocs.org on GitHub Pages. The source lives on Codeberg and is mirrored to GitHub pages for hosting.</p>"},{"location":"calendar/","title":"Events Calendar","text":"<p>The Meets Secretary organises a schedule of evening and weekend meets and helps coordinate trips away.</p> <p>For the convenience of members these are added to a Google Calendar and shared so that people have a simple way of looking up on their mobile devices where they are going.</p> <p>This page details how to administer and add new events to the calendar. An overview of the steps required is shown in the flowchart below.</p> flowchart TD     A(Decide Schedule) --&gt; |Evening/Weekend events| B(Add to Schedule Google Calendar)     A --&gt;|Trips or Training| C(Add to Trips/Training)     B --&gt; D(Run PCC script)     C --&gt; D     D --&gt; E(Share details with Club Secretary)     E --&gt; F(Club Secretary Notifies members of updates and availability)"},{"location":"calendar/#ownership","title":"Ownership","text":"<p>For this to work someone needs a Google account under which to store the data, calendars and run scripts. For the time being these reside with Neil Shephard who has a disposable Gmail account to do things associated with climbing. In time it may make sense to transfer ownership and responsibility of these tasks to the club Secretary and the associated account.</p>"},{"location":"calendar/#google-sheets","title":"Google Sheets","text":"<p>In order to work the schedule needs to be saved as a Google Sheets with columns in a specific order. The current spreadsheet to which events can be added to Peak Climbing Club Schedule. There are two worksheets <code>schedule</code> and <code>trips</code>. The former is for evening and weekend days out, the later for weekend meets away and longer trips.</p>"},{"location":"calendar/#schedule","title":"Schedule","text":"<p>The columns (aka \"Schema\") of this sheet is as follows</p> Column Type Description <code>CalendarID</code> str Calendar to which the event should be added. <code>Date</code> date Date in ISO8601 <code>YYYY-MM-DD</code> format. <code>Start Time</code> time Time in <code>HH:MM</code> format. <code>End Time</code> time Time in <code>HH:MM</code> format. <code>Primary Venue</code> str Venue for the event, typically a crag or indoor wall. <code>Backup</code> str Backup venue. <code>Pub</code> str Pub for post-climbing refreshments <code>Notes</code> str Notes, typically around parking at the proposed venue. <code>EventStart</code> formula <code>Date</code> + <code>Start Time</code> combined to a single field (used in calendar) <code>EventEnd</code> formula <code>Date</code> + <code>End Time</code> combined to a single field (used in calendar) <code>EventName</code> formula <code>Primary Venue</code> + <code>Backup</code> combined to a single field (used in calendar) <code>EventDetails</code> formula <code>Pub</code> + <code>Notes</code> combined to a single field (used in calendar) <code>Civil Twilight</code> time Sunset time, not currently used."},{"location":"calendar/#trips","title":"Trips","text":"<p>The columns (aka \"Schema\") of this sheet is as follows</p> Column Type Description <code>EventStart</code> date Date in ISO8610 format. <code>EventEnd</code> date Date in ISO8610 format. <code>EventName</code> str Short description of event, either training or venue of trip. <code>EventDetails</code> str Typically the co-ordinator of the event."},{"location":"calendar/#google-calendar","title":"Google Calendar","text":"<p>Google Calendar is used to provide a publicly available calendar which others can subscribe to if they have Google account or other Calendar service which allows subscriptions, or a snapshot can be downloaded in iCal and imported to their calendar.</p> <p>There are two calendars</p> <ul> <li>PCC Local Meets - for Tuesday/Thursday and venues at the weekend local to Sheffield.</li> <li>PCC - Trips &amp; Training - for weekends away, training events and longer jaunts away climbing.</li> </ul> <p>A third calendar exists PCC - Test which was used when developing the workflow and code but is essentially redundant now.</p> <p>Club members can add these calendars to their own using the following iCal links.</p>"},{"location":"calendar/#google-scripts","title":"Google Scripts","text":"<p>Google Scripts is the glue the sticks the information on meets stored in the Peak Climbing Club Schedule Google Sheet into the Peak Climbing Club Calendars (both Local Meets and Trips). It is similar in structure to JavaScript. As with both the sheets and calendar this has to reside under an individuals Google account but a copy of the script is version controlled as part of this repository (see PCC Calendar Script).</p> <p>The script pulls out specific columns, based on the argument <code>event_start_col</code> provided to the <code>schedule()</code> function for a fixed number of rows, the code is fairly lazy and expects this to be the date on which events starts which is ultimately stored in the <code>begin</code> variable and for it to be followed columns in a specific order, the next being <code>EventEnd</code> (stored in <code>end</code>), then <code>EventName</code> (stored in <code>venue</code>) and finally <code>EventDetails</code> (stored in <code>description</code>).</p> <p>Existing events from <code>2025-01-01</code> through to <code>2030-01-01</code> are removed, this avoids duplicate entries occurring when the script is re-run (a lazy option rather than checking to see if an event already exists which does have some drawbacks).</p> <p>The list of events is then looped over, pulling out the necessary information and using the <code>CalendarApp.createEvent()</code> method to create the event in the correct calendar with the required details.</p> <p>It should be noted the script is not very well written or structured. JavaScript is not something the author is particularly familiar with and therefore there is considerable scope for improvement.</p>"},{"location":"calendar/#updating-calendar","title":"Updating Calendar","text":"<p>When ready to run the script use the Run button on the Google Scripts page. You can view the log messages in the console and all being well it should sit there and churn away. It takes a while as a short pause between each submission is required to avoid hitting the API rate limits.</p>"},{"location":"calendar/#limitations","title":"Limitations","text":"<p>At the moment existing events are left in the spreadsheet and the value of the number of events to pull out, which is currently <code>400</code> can be incremented if required. Ideally this limit should be very high and the code should check to see if an event exists and not add it if it does, but as mentioned this is a messy hack. There are two options if the number of rows in the Spreadsheets exceeds <code>400</code></p> <ol> <li>Remove old events.</li> <li>Increase the threshold in the script.</li> </ol>"},{"location":"calendar/#using-the-calendar","title":"Using the Calendar","text":"<p>Members who wish to subscribe to the calendar on their own account, whether that is Google or others such as Proton (a privacy respecting email/calendar/password manager service that has a free tier available) can do so by importing the iCal links to their account. The links are...</p> <ul> <li>PCC Local Meets iCal</li> <li>PCC Trips &amp; Training iCal</li> </ul> <p>These files can be saved (Right Click &gt; Save Link) and the imported to a calendar. There are instructions for importing to Google calendars and Proton calendars. On mobile downloading the above links should allow you to import them to your calendar.</p> <p>After importing you may want to disable notifications for the imported calendar.</p>"},{"location":"meetings/","title":"Meetings","text":"<p>Scheduling meetings of the committee requires surveying when most committee members are able to meet. Typically this is done at the end of a meeting but if this is skipped a method of surveying members is required.</p>"},{"location":"meetings/#when2meet","title":"When2meet","text":"<p>When2meet is a useful, free tool that does not require user registration. The About page has a video tutorial.</p> <ol> <li>Add a title (e.g. <code>Next PCC Committee</code>).</li> <li>Select specific dates, typically Wednesday evenings.</li> <li>Set time range, No earlier than <code>20:00</code> and No later than <code>22:00</code>.</li> <li>Make sure timezone is <code>Europe/London</code>.</li> <li>Click on Create Event button.</li> <li>The next page has a link email them you can click on to email people. Alternatively at the end of the line is the    URL which can be copy and pasted into the PCC - Committee Signal group chat.</li> </ol> <p>Respondents only need to enter a name and highlight the days that they are able to make.</p>"},{"location":"meetings/#whenisgood","title":"WhenIsGood","text":"<p>WhenIsGood is another useful, free tool that does not require user registration. The FAQ describes how to use it. It operates a Freemium model whereby a paid account allows respondents can register three types of responses and users with the account can export results to CSV.</p>"},{"location":"signal/","title":"Signal","text":"<p>The committee uses Signal, a privacy respecting instant messaging system, to communicate.</p>"},{"location":"signal/#adding-members-to-the-group","title":"Adding Members to the Group","text":"<p>Only those who are designated as \"Admin\" in the group can invite new members. The current admins are...</p> <ul> <li>Neil Shephard</li> <li>Trevor Wilson</li> <li>Steve Lismore</li> <li>Adam Chambers</li> </ul> <p>There are two methods of adding members to the group and which is used depends on whether you have the persons contact phone number already.</p>"},{"location":"signal/#with-phone-number","title":"With Phone Number","text":"<p>If an admin has a persons phone number they should be able to invite them to join the group chat.</p>"},{"location":"signal/#without-phone-number","title":"Without Phone Number","text":"<p>If you don't already have a persons mobile phone number there is a link for adding people to the group which you can send to those you wish to add to the group. To avoid SPAM this is not listed on this site, please message an admin for this URL (Neil Shephard will definitely have it).</p>"},{"location":"signal/#polls","title":"Polls","text":"<p>There is no polling feature on Signal but there are options.</p> Reply with... <p>Craft a message and list the options with a unique emoji against each response asking people to use the emoji that matches their preference.</p> <p>Do you prefer...</p> <p>Option A \ud83d\udc35 Option B \ud83d\udc2e Option C \ud83e\udd84</p> <p>This works only when unique responses are required.</p> Thumbs up to... <p>If multiple responses are required, e.g. for indicating availability on dates then the alternative is to ask a question and then post a series of options that people can add a \ud83d\udc4d</p> <p>Please indicate what dates you are available for</p> <p>Date 1</p> <p>Date 2</p> <p>Date 3 ///</p> <p>See also meetings</p>"}]}